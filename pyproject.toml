[build-system]
requires = [
    "hatchling>=0.21.1",
]
build-backend = "hatchling.build"

[project]
name = "coloraide_extras"
description = "A color library for Python."
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    { name = "Isaac Muse", email = "Isaac.Muse@gmail.com" },
]
keywords = [
    "css",
    "color"
]
dynamic = [
    "classifiers",
    "version",
]

dependencies = [
    "coloraide>=2.10"
]

[project.urls]
Homepage = "https://github.com/facelessuser/coloraide-extras"

[tool.hatch.version]
source = "code"
path = "coloraide_extras/__meta__.py"

[tool.hatch.build.targets.wheel]
include = [
    "/coloraide_extras",
]

[tool.hatch.build.targets.sdist]
include = [
    "/docs/src/markdown/**/*.md",
    "/docs/src/markdown/**/*.gif",
    "/docs/src/markdown/**/*.png",
    "/docs/src/markdown/dictionary/*.txt",
    "/requirements/*.txt",
    "/coloraide_extras/**/*.py",
    "/coloraide_extras/py.typed",
    "/tests/**/*.py",
    "/tools/**/*.py",
    "/.pyspelling.yml",
    "/.coveragerc",
    "/mkdocs.yml"
]

[tool.mypy]
files = [
    "coloraide_extras"
]
strict = true
show_error_codes = true

[tool.hatch.metadata.hooks.custom]

[tool.ruff]
line-length = 120

select = [
    "A",    # flake8-builtins
    "B",    # flake8-bugbear
    "D",    # pydocstyle
    "C4",   # flake8-comprehensions
    "N",    # pep8-naming
    "E",    # pycodestyle
    "F",    # pyflakes
    "PGH",  # pygrep-hooks
    "RUF",  # ruff
    # "UP",   # pyupgrade
    "W",    # pycodestyle
    "YTT",  # flake8-2020,
    "PERF"  # Perflint
]

ignore = [
    "E741",
    "D202",
    "D401",
    "D212",
    "D203",
    "N802",
    "N801",
    "N803",
    "N806",
    "N818",
    "RUF012",
    "RUF005",
    "PGH004",
    "RUF100"
]

[tool.tox]
legacy_tox_ini = """
    [tox]
    isolated_build = true
    envlist=
        py38,py39,py310,py311,py312,
        lint

    [testenv]
    passenv=LANG
    deps=
        -rrequirements/test.txt
    commands=
        {envbindir}/mypy
        {envbindir}/py.test --cov coloraide_extras --cov-append tests
        {envbindir}/coverage html -d {envtmpdir}/coverage
        {envbindir}/coverage xml
        {envbindir}/coverage report --show-missing

    [testenv:lint]
    deps=
        -r requirements/lint.txt
    commands=
        "{envbindir}"/ruff check .

    [testenv:documents]
    deps=
        -rrequirements/docs.txt
    commands=
        {envpython} -m mkdocs build --clean --verbose --strict
        {envbindir}/pyspelling
"""
